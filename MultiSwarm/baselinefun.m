function [base] = baselinefun(flow,options,thetaBetaM,maxThetaBetaM,PrandtlMeyer)

options.Bezier = false;
options.baseline = false;

% Number of wing partitions
n = 2;

variCons = {"Variables",    "Num Of",  "Conditions",  'Transformations';...
    "Dihedral",             "~",       "~",           '~';...
    "Chord",                n+1,       "~",           '~';...
    "LESweep",              n,         "~"            '~';...
    "Semispan",             n,         "~",           '~';...            
    "SectionDefinition",    "~",       "~",           '~';...
    "xOffset",              "~",       "~",           '~';...
    "zOffset",              "~",       "~"            '~';...
    "UpperLength",          "~",       "~",           '~';...
    "yUpperRad",            "~",       "~",           '~';...
    "yBotRatio",            "~",       "~",           '~';...
    "zUpperRad",            "~",       "~",           '~';...
    "SideLength",           "~",       "~",           '~';...
    "zLowerRad",            "~",       "~",           '~';...
    "AftLength",            "~",       "~",           '~';...
    "NoseRad",              "~",       "~",           '~';...
    "NoseLength",           "~",       "~",           '~';...
    "zNoseOffset",          "~",       "~",           '~';...
    "ForeLength",           "~",       "~",           '~'};

for i=size(variCons,1):-1:1
    secDef(i) = variCons{i,1} == "SectionDefinition";
end

SectionDefinition = {"Section", n+1, "~", '~'};
variCons(secDef,:) = SectionDefinition;

[foilData,~] = getaerofoilsecdata();

[cond,varArray,~] = translate(variCons);
[partArrays,sectionArray] = partIndexing(cond,varArray);

baseVar = [4, 13.85,4.387,1.5241, 80,45, 0.744+0.88,2.62686, 2,1,1, -3.5,-0.74,... % Wing
    0,0.88,0.1, 0.88,0.759,0.05, 11.8956, 0.155,0.1115,-0.35, 4.4238]; % Body

sectionPos = baseVar(:,sectionArray);
sections = foilData(sectionPos);

[baseProperties,~,parameters] = particlecreator(baseVar,baseVar,partArrays,sections);
parameters.Aref = 33.213;

[~,base] = aeroprediction(baseProperties,flow,parameters,thetaBetaM,maxThetaBetaM,PrandtlMeyer,options);