function [condCell,varMin,varMax,varArray,nVar] = translate(variCons)
%% Conditioning initialisation
% Creates cell to be read for conditioning and indexing purposes

[dim1,dim2] = size(variCons);

preVar = 0;

condCell = cell(dim1-1,dim2+2);

for i=2:dim1
    
    name = variCons{i,1};
    min = variCons{i,2};
    max = variCons{i,3};
        num = variCons{i,4};
    con = variCons{i,5};
    trans = variCons{i,6};
    
    if ~isnumeric(num)
        num = 1;
    end
    
    nVar = preVar + num;
    target = (preVar + 1) : nVar;
    
    if preVar == 0
        varArray(1,:) = name;
    else
        varArray(target,:) = name;
    end
    
    [Constraint,Setto,conFun] = deal([]);
    
    if con ~= "~"
        
        for ii = numel(con):-1:1
            
            coni = con(ii);
            
            if contains(coni,"<")
                condition = ' < ';
            end
            if contains(coni,">")
                condition = ' > ';
            end
            if contains(coni,"==")
                condition = ' == ';
            end
            if contains(coni,"sum")
                constraint = regexp(coni,'[+-]?\d+\.?\d*', 'match');
                setto = constraint;
                equation = ['sum(target)' condition char(constraint)];
                constraint = double(constraint);
            end
            if contains(coni,"Previous")
                constraint = [NaN, target(1:end-1)];
                setto = constraint;
                equation = ['target' condition 'constraint'];
            end
            if contains(coni,"Next")
                constraint = [target(2:end), NaN];
                setto = constraint;
                equation = ['target' condition 'constraint'];
            end
            if contains(coni,"Minimum")
                
                constraint = regexp(coni,'[+-]?\d+\.?\d*', 'match');
                setto = 0;
                equation = ['target > ' char(constraint)];
                constraint = double(constraint);
            end
            if contains(coni,"Maximum")
                
                constraint = regexp(coni,'[+-]?\d+\.?\d*', 'match');
                equation = ['target < ' char(constraint)];
                constraint = double(constraint);
            end
            if contains(coni,"Floor")
                equation = 'floor(target)';
                constraint = NaN;
                setto = NaN;
            end
            
            Constraint(ii,:) = constraint;
            Setto(ii,:) = setto;
            conFun{ii} = equation;
            
        end
        
    end
    
    if trans == "~"
        transFun = [];
    else
        transFun = trans;
    end
    
    j = i - 1;
    
    condCell{j,1} = name;
    condCell{j,2} = target;
    condCell{j,3} = Constraint;
    condCell{j,4} = Setto;
    condCell{j,5} = string(conFun);
    condCell{j,6} = transFun;
    
    preVar = nVar;
    
end

end
